<!DOCTYPE html>
<html lang="<%= i18n.getLocale() %>">
  <head>
    <%- include('../parts/head'); %>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.6/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <link
      rel="stylesheet"
      href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"
    />
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var events = JSON.parse('<%- JSON.stringify(events) %>');
        var confirmCreateButtonText = "<%= __('yes_create_it') %>";
        var confirmDeleteButtonText = "<%= __('yes_delete_it') %>";
        var cancelButtonText = "<%= __('no_return') %>";
        var gotItText = "<%= __('confirmButtonText') %>";
        var today = new Date();
        var calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'dayGridMonth',
          initialDate: today,
          headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay',
          },
          navLinks: true,
          selectable: true,
          selectMirror: true,
          select: function (arg) {
            Swal.fire({
              html: `<div class="mb-7"><%= __('create_new_event') %></div>
                     <div class="fw-bold mb-5"><%= __('event_name') %></div>
                     <input type="text" class="form-control" name="event_name" />
                     <div class="fw-bold mb-5"><%= __('start_time') %></div>
                     <input type="datetime-local" class="form-control" name="start_time" />
                     <div class="fw-bold mb-5"><%= __('end_time') %></div>
                     <input type="datetime-local" class="form-control" name="end_time"/>`,
              icon: 'info',
              showCancelButton: true,
              buttonsStyling: false,
              confirmButtonText: confirmCreateButtonText,
              cancelButtonText: cancelButtonText,
              customClass: {
                confirmButton: 'btn btn-primary hero-btn',
                cancelButton: 'btn btn-active-light hero-btn',
              },
            }).then(function (result) {
              if (result.value) {
                var title = document.querySelector(
                  'input[name="event_name"]'
                ).value;
                var start = document.querySelector(
                  'input[name="start_time"]'
                ).value;
                var end = document.querySelector(
                  'input[name="end_time"]'
                ).value;

                if (!start) {
                  start = moment(arg.start)
                    .startOf('day')
                    .format('YYYY-MM-DDTHH:mm:ss');
                }

                if (!end) {
                  end = moment(arg.end)
                    .startOf('day')
                    .format('YYYY-MM-DDTHH:mm:ss');
                }

                if (title) {
                  var data = {
                    title: title,
                    start: start,
                    end: end,
                  };

                  fetch('/events', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                  })
                    .then(response => response.json())
                    .then(data => {
                      calendar.refetchEvents();
                    })
                    .catch(error => console.error(error));
                }
                calendar.unselect();
              } else if (result.dismiss === 'cancel') {
                var text = "<%= __('event_creation_declined') %>";
                Swal.fire({
                  text: text,
                  icon: 'error',
                  buttonsStyling: false,
                  confirmButtonText: gotItText,
                  customClass: {
                    confirmButton: 'btn btn-primary hero-btn',
                  },
                });
              }
            });
          },
          eventClick: function (arg) {
            event.preventDefault();
            var text = "<%= __('are_you_sure_delete') %>";
            Swal.fire({
              text: text,
              icon: 'warning',
              showCancelButton: true,
              buttonsStyling: false,
              confirmButtonText: confirmDeleteButtonText,
              cancelButtonText: cancelButtonText,
              customClass: {
                confirmButton: 'btn btn-primary hero-btn',
                cancelButton: 'btn btn-active-light hero-btn',
              },
            }).then(function (result) {
              if (result.value) {
                fetch(`/events/${arg.event.id}`, {
                  method: 'DELETE',
                })
                  .then(response => {
                    if (response.ok) {
                      arg.event.remove();
                      var text = "<%= __('event_deleted') %>";
                      Swal.fire({
                        text: text,
                        icon: 'success',
                        buttonsStyling: false,
                        confirmButtonText: gotItText,
                        customClass: {
                          confirmButton: 'btn btn-primary hero-btn',
                        },
                      });
                    } else {
                      throw new Error('Network response was not ok');
                    }
                  })
                  .catch(error => {
                    var text = "<%= __('problem_deleting') %>";
                    console.error(
                      'There was a problem with the fetch operation:',
                      error
                    );
                    Swal.fire({
                      text: text,
                      icon: 'error',
                      buttonsStyling: false,
                      confirmButtonText: gotItText,
                      customClass: {
                        confirmButton: 'btn btn-primary hero-btn',
                      },
                    });
                  });
              } else if (result.dismiss === 'cancel') {
                var text = "<%= __('event_not_deleted') %>";
                Swal.fire({
                  text: text,
                  icon: 'error',
                  buttonsStyling: false,
                  confirmButtonText: gotItText,
                  customClass: {
                    confirmButton: 'btn btn-primary hero-btn',
                  },
                });
              }
            });
          },
          editable: true,
          dayMaxEvents: true,
          events: events,
          eventColor: '#4d5ae5',
        });

        calendar.render();
      });
    </script>
  </head>
  <body>
    <header class="header"><%- include('../parts/header'); %></header>
    <main>
      <section class="section3 sections-padding">
        <div class="ui container">
          <div class="ui grid">
            <div class="ui sixteen">
              <div id="calendar"></div>
            </div>
          </div>
        </div>
      </section>
    </main>
  </body>
</html>
